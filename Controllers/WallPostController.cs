using EducateMeForums.InterfaceForService;
using EducateMeForums.Models;using EducateMeForums.ViewModels.ApplicationUser;using EducateMeForums.ViewModels.WallPost;using Microsoft.AspNetCore.Identity;using Microsoft.AspNetCore.Mvc;using System;using System.Threading.Tasks;
namespace EducateMeForums.Controllers{    public class WallPostController : Controller    {        private readonly IWallPostComment _wallpostService;        private static UserManager<ApplicationUser> _userManager;        private readonly IApplicationUser _userService;        public WallPostController(IWallPostComment wallpostService,        UserManager<ApplicationUser> userManager,           IApplicationUser userService)        {           _wallpostService = wallpostService;            _userManager = userManager;           _userService = userService;        }        public IActionResult Index(int id)        {            var wallposts = _wallpostService.GetById(id);  
            var model = new ProfileModel            {                WallPostTitle = wallposts.WallPostTitle,                Posted = wallposts.Posted,                WallPostBodyContent = wallposts.WallPostBodyContent,           };
            if (Request.Headers["X-Requested-With"] == "XMLHttpRequest")                return PartialView(wallposts);            return View(wallposts);        }      public async Task<IActionResult> Create(int id)        {            var user = await _userManager.FindByNameAsync(User.Identity.Name);            var model = new NewWallPostModel           {               UserId = user.Id,                AuthorName = User.Identity.Name,            };            return View(model);        }       [HttpPost]        public async Task<IActionResult> AddWallPost(NewWallPostModel model)        {           var userId = _userManager.GetUserId(User);
            var user = _userManager.FindByIdAsync(userId).Result;
            var wallPost = BuildWallPost(model, user);          await _wallpostService.Create(wallPost);            return RedirectToAction("Index", "Home", new { id = wallPost.Id });        }
        private WallPost BuildWallPost(NewWallPostModel model, ApplicationUser user)        {            return new WallPost            {               WallPostTitle = model.WallPostTitle,                WallPostBodyContent = model.WallPostBodyContent,                Posted = DateTime.Now,                User = user
            };        }    }}